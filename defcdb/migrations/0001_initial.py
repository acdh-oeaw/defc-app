# Generated by Django 4.2.7 on 2023-11-07 12:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("bib", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified", models.DateTimeField(auto_now=True, null=True)),
                (
                    "public",
                    models.BooleanField(
                        default=False, help_text="Make this record public or not?"
                    ),
                ),
                (
                    "area_nr",
                    models.CharField(
                        blank=True,
                        help_text="An established identifier for this area",
                        max_length=45,
                        null=True,
                        verbose_name="Area ID",
                    ),
                ),
                (
                    "radiocarbon_dated",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "yes"), ("no", "no")],
                        help_text="Radiocarbon dated?",
                        max_length=5,
                        null=True,
                    ),
                ),
                (
                    "earliest_date_lab_number",
                    models.CharField(
                        blank=True,
                        help_text="The Laboratory number of 14C sample of the earliest date.",
                        max_length=100,
                        null=True,
                        verbose_name="Earliest date: Lab Number",
                    ),
                ),
                (
                    "earliest_date_14c_age",
                    models.IntegerField(
                        blank=True,
                        help_text="The earliest date without calibration BP.",
                        null=True,
                        verbose_name="Earliest date: 14C age (BP)",
                    ),
                ),
                (
                    "earliest_date_calibration",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "yes"), ("no", "no")],
                        help_text="Was the date calibrated or not?",
                        max_length=5,
                        null=True,
                        verbose_name="Earliest date: Calibration",
                    ),
                ),
                (
                    "earliest_date_14c_age_calibrated",
                    models.IntegerField(
                        blank=True,
                        help_text="The earliest date with calibration in BC.",
                        null=True,
                        verbose_name="Earliest date: 14C age calibrated (BC)",
                    ),
                ),
                (
                    "earliest_date_date_of_calibration",
                    models.DateField(
                        blank=True,
                        help_text="When was the date calibrated? If only year is specified, use the first day of the month/year.",
                        null=True,
                        verbose_name="Earliest date: Date of calibration",
                    ),
                ),
                (
                    "earliest_date_standard_deviation",
                    models.IntegerField(
                        blank=True,
                        help_text="The statistical reliability of the dating. Use +/-.",
                        null=True,
                        verbose_name="Earliest date: Standard deviation (+/-)",
                    ),
                ),
                (
                    "earliest_date_delta13",
                    models.IntegerField(
                        blank=True,
                        help_text="Delta 13C information.",
                        null=True,
                        verbose_name="Earliest date: delta 13C",
                    ),
                ),
                (
                    "latest_date_lab_number",
                    models.CharField(
                        blank=True,
                        help_text="The Laboratory number of 14C sample of the latest date.",
                        max_length=100,
                        null=True,
                        verbose_name="Latest date: Lab Number",
                    ),
                ),
                (
                    "latest_date_14c_age",
                    models.IntegerField(
                        blank=True,
                        help_text="The latest date without calibration BP (raw).",
                        null=True,
                        verbose_name="Latest date: 14C age (BP)",
                    ),
                ),
                (
                    "latest_date_calibration",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "yes"), ("no", "no")],
                        help_text="Was the date calibrated or not?",
                        max_length=5,
                        null=True,
                        verbose_name="Latest date: Calibration",
                    ),
                ),
                (
                    "latest_date_14c_age_calibrated",
                    models.IntegerField(
                        blank=True,
                        help_text="The latest date with calibration in BC.",
                        null=True,
                        verbose_name="Latest date: 14C age calibrated (BC)",
                    ),
                ),
                (
                    "latest_date_date_of_calibration",
                    models.DateField(
                        blank=True,
                        help_text="When was the date calibrated? If only year is specified, use the first day of the month/year.",
                        null=True,
                        verbose_name="Latest date: Date of calibration",
                    ),
                ),
                (
                    "latest_date_standard_deviation",
                    models.IntegerField(
                        blank=True,
                        help_text="The statistical reliability of the dating. Use +/-.",
                        null=True,
                        verbose_name="Latest date: Standard deviation (+/-)",
                    ),
                ),
                (
                    "latest_date_delta13",
                    models.IntegerField(
                        blank=True,
                        help_text="Delta 13C information.",
                        null=True,
                        verbose_name="Latest date: delta 13C",
                    ),
                ),
                (
                    "period_comment",
                    models.TextField(
                        blank=True,
                        help_text="Additional information on the period not covered in any other field.",
                        null=True,
                    ),
                ),
                (
                    "settlement_human_remains",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "yes"), ("no", "no")],
                        help_text="Any human remains found in this Settlement?",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "cave_rockshelters_human_remains",
                    models.CharField(
                        blank=True,
                        choices=[("yes", "yes"), ("no", "no")],
                        help_text="Any human remains found in this cave or rockshelter?",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "cemetery_or_grave",
                    models.CharField(
                        blank=True,
                        choices=[("cemetery", "cemetery"), ("grave", "grave")],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "grave_number_of_graves",
                    models.CharField(
                        blank=True,
                        help_text="Number of graves.",
                        max_length=100,
                        null=True,
                        verbose_name="Grave: number of graves",
                    ),
                ),
                (
                    "grave_estimated_number_of_individuals",
                    models.CharField(
                        blank=True,
                        help_text="minimum and or maximum",
                        max_length=100,
                        null=True,
                        verbose_name="Grave: estimated number of individuals",
                    ),
                ),
                (
                    "grave_number_of_female_sex",
                    models.IntegerField(
                        blank=True,
                        help_text="Number of female individuals in a grave/settlement.",
                        null=True,
                        verbose_name="Grave: number of female sex",
                    ),
                ),
                (
                    "grave_number_of_male_sex",
                    models.IntegerField(
                        blank=True,
                        help_text="Number of male individuals in a grave/settlement.",
                        null=True,
                        verbose_name="Grave: number of male sex",
                    ),
                ),
                (
                    "grave_number_of_not_specified_sex",
                    models.IntegerField(
                        blank=True,
                        help_text="Number of those individuals whose sex could not be determined.",
                        null=True,
                        verbose_name="Grave: number of not specified sex",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Free text summary account on the settlement/cave&rockshelters/quarry/cemetery&graves",
                        null=True,
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Additional information not covered in any other field.",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("site",),
            },
        ),
        migrations.CreateModel(
            name="DC_area_agegroups",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="Age.", max_length=100, null=True
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_areatype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The type of the area.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_buildingtechnique",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Method used for fabricating the buildings.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_caverockshelterstype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Type of cave/rockshelter.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_constructionshape",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Shape of building.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_constructiontype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Type of buildings.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_evidenceofgraveshumanremains",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Presence of graves and/or human remains.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_evidenceofoccupation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Type of evidence indicating occupation found.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_exploitationtype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Type of extraction.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_gravetype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Types of graves.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_manipulationofgraves",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="If and how the space with the graves is marked.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_mortuaryfeatures",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Parts of the cemetery other than graves.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_rawmaterial",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Resource that was extracted.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_settlementstructure",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Layout of settlement.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_settlementtype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Classification of settlement.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_sexes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="Sex.", max_length=100, null=True
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_specialfeatures",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Parts of the settlement other than buildings.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_topography",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Connection of the cemetery/graves with other archaeological /natural or modified landscape features.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_area_typeofhumanremains",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="How the humans were treated after death and buried.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_country",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="The name of the country", max_length=100
                    ),
                ),
                (
                    "original_name",
                    models.CharField(
                        blank=True,
                        help_text="The original or local name of the country",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "authorityfile_id",
                    models.CharField(
                        blank=True,
                        help_text="Identifier provided by www.GeoNames.org",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lng", models.FloatField(blank=True, null=True)),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_amount",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_animal_remains_completeness",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_animal_remains_part",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_animal_remains_species",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "latin_name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="DC_finds_botany_species",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "latin_name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="DC_finds_lithics_core_shape",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_lithics_industry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_lithics_raw_material",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_lithics_retouched_tools",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_lithics_technology",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_lithics_unretouched_tools",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_material",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_pottery_decoration",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "german_name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_pottery_detail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "german_name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_pottery_form",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "german_name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_small_finds_category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_small_finds_type",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "german_name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="defcdb.dc_finds_small_finds_category",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_finds_type",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="PLEASE PROVIDE SOME HELPTEX",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="DC_interpretation_productiontype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Types of production for which evidence was found.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_interpretation_subsistencetype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Types of livelihood for which evidence was found.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_period_datedby",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="please provide helptext",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_period_datingmethod",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="please provide helptext",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_province",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the province",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "original_name",
                    models.CharField(
                        blank=True,
                        help_text="The original or local name of the province",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "authorityfile_id",
                    models.CharField(
                        blank=True,
                        help_text="Identifier provided by www.GeoNames.org",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lng", models.FloatField(blank=True, null=True)),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_reference_type",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_researchevent_institution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Organisation that carried out a research project at the site.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_researchevent_researchtype",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Methods used for researching the site.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_researchevent_special_analysis",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Analyses other than excavation that were carried out to research the site.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_site_coordinatesource",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="please provide helptext",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_site_geographicalreferencesystem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name of system uniquely determining the position of the site.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DC_site_topography",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Description of surface shape and features.",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Finds",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified", models.DateTimeField(auto_now=True, null=True)),
                (
                    "public",
                    models.BooleanField(
                        default=False, help_text="Make this record public or not?"
                    ),
                ),
                (
                    "obsidian",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="Are there traces of obsidian in the tool?",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "obsidian_amount",
                    models.IntegerField(
                        blank=True,
                        help_text="The percentage of obsidian in the tool.",
                        null=True,
                        verbose_name="Obsidian amount (%)",
                    ),
                ),
                (
                    "pottery_type",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "confidence",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                        ],
                        help_text="How reliable the information is that was entered.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Additional information not covered in any other field.",
                        null=True,
                    ),
                ),
                (
                    "amount",
                    models.ForeignKey(
                        blank=True,
                        help_text="Number of pieces within the category.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="defcdb.dc_finds_amount",
                    ),
                ),
                (
                    "animal_remains_completeness",
                    models.ForeignKey(
                        blank=True,
                        help_text="How much was present (complete or part).",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="defcdb.dc_finds_animal_remains_completeness",
                    ),
                ),
                (
                    "animal_remains_part",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Which part was present.",
                        to="defcdb.dc_finds_animal_remains_part",
                    ),
                ),
                (
                    "animal_remains_species",
                    models.ManyToManyField(
                        blank=True,
                        help_text="How the zoological sample / find is categorised.",
                        to="defcdb.dc_finds_animal_remains_species",
                    ),
                ),
                (
                    "area",
                    models.ForeignKey(
                        blank=True,
                        help_text="Location of the find.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="defcdb.area",
                    ),
                ),
                (
                    "botany_species",
                    models.ManyToManyField(
                        blank=True,
                        help_text="How the botanical sample / find is categorised.",
                        to="defcdb.dc_finds_botany_species",
                    ),
                ),
                (
                    "finds_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Category of finds.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="defcdb.dc_finds_type",
                    ),
                ),
                (
                    "lithics_core_shape",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Type of the core of the tool.",
                        to="defcdb.dc_finds_lithics_core_shape",
                        verbose_name="Lithics cores and preparation",
                    ),
                ),
                (
                    "lithics_industry",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Blade/Flake/Microlithic industry.",
                        to="defcdb.dc_finds_lithics_industry",
                    ),
                ),
                (
                    "lithics_raw_material",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Material from which the tool was made.",
                        to="defcdb.dc_finds_lithics_raw_material",
                    ),
                ),
                (
                    "lithics_retouched_tools",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Type of the retouched tool.",
                        to="defcdb.dc_finds_lithics_retouched_tools",
                        verbose_name="Lithics retouched tools (types)",
                    ),
                ),
                (
                    "lithics_technology",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Technology of lithic production.",
                        to="defcdb.dc_finds_lithics_technology",
                    ),
                ),
                (
                    "lithics_unretouched_tools",
                    models.ManyToManyField(
                        blank=True,
                        to="defcdb.dc_finds_lithics_unretouched_tools",
                        verbose_name="Lithics unretouched tools (types)",
                    ),
                ),
                (
                    "material",
                    models.ManyToManyField(
                        blank=True,
                        help_text="What was the small find made of.",
                        to="defcdb.dc_finds_material",
                    ),
                ),
                (
                    "pottery_decoration",
                    models.ManyToManyField(
                        blank=True,
                        help_text="What the pottery was embellished with.",
                        to="defcdb.dc_finds_pottery_decoration",
                    ),
                ),
                (
                    "pottery_detail",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Preserved part of the pottery.",
                        to="defcdb.dc_finds_pottery_detail",
                    ),
                ),
                (
                    "pottery_form",
                    models.ForeignKey(
                        blank=True,
                        help_text="The form of the pottery.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="defcdb.dc_finds_pottery_form",
                    ),
                ),
                (
                    "reference",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Bibliographic and web-based reference(s) to publications and other relevant resources on the selected small finds.",
                        to="bib.book",
                    ),
                ),
            ],
            options={
                "ordering": ("area",),
            },
        ),
        migrations.CreateModel(
            name="Name",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified", models.DateTimeField(auto_now=True, null=True)),
                (
                    "public",
                    models.BooleanField(
                        default=False, help_text="Make this record public or not?"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The entities name",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        help_text="The 'name´s' language. Controlled vocab will be provided.",
                        max_length=3,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Reference",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified", models.DateTimeField(auto_now=True, null=True)),
                (
                    "public",
                    models.BooleanField(
                        default=False, help_text="Make this record public or not?"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="The title of the ressource.",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "creator",
                    models.CharField(
                        blank=True,
                        help_text="The person who is main responsible for creating the resource",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "creation_time",
                    models.IntegerField(
                        blank=True,
                        help_text="The date of the creation date of the ressource.",
                        null=True,
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        blank=True,
                        help_text="The URL to the ressource",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ("title",),
            },
        ),
        migrations.CreateModel(
            name="Site",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified", models.DateTimeField(auto_now=True, null=True)),
                (
                    "public",
                    models.BooleanField(
                        default=False, help_text="Make this record public or not?"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name of a place in which evidence of past activity is preserved and which represents a part of the archaeological record.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=12, max_digits=20, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=12, max_digits=20, null=True
                    ),
                ),
                (
                    "elevation",
                    models.IntegerField(
                        blank=True, help_text="If available", null=True
                    ),
                ),
                (
                    "authorityfile_id",
                    models.CharField(
                        blank=True,
                        help_text="Identifier provided by www.GeoNames.org. E.g. the number in <a href='http://www.geonames.org/2772400/linz.html'>http://www.geonames.org/2772400/linz.html</a>.",
                        max_length=100,
                        null=True,
                        verbose_name="Authorityfile ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Free text summary account on the site.",
                        null=True,
                    ),
                ),
                (
                    "exact_location",
                    models.CharField(
                        choices=[("yes", "yes"), ("no", "no")],
                        default="no",
                        help_text="<strong>Yes</strong>: location of site is known and coordinates from the approximate center of the site have been entered.<br/> <strong>No</strong>: Only the region/province/ephorie approximate location of the site is known. Coordinates from the approximate center of the region/province/ ephorie have been entered.",
                        max_length=50,
                    ),
                ),
                (
                    "number_of_activity_periods",
                    models.IntegerField(
                        blank=True,
                        help_text="How many past activities have been recorded on the site?",
                        null=True,
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Additional information on the site not covered in any other field.",
                        null=True,
                    ),
                ),
                (
                    "alias_name",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Other name of the site.",
                        related_name="aliasName",
                        to="defcdb.name",
                    ),
                ),
                (
                    "alternative_name",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Different spelling of the name of the site.",
                        related_name="alternativeName",
                        to="defcdb.name",
                    ),
                ),
                (
                    "coordinate_source",
                    models.ForeignKey(
                        blank=True,
                        help_text="Source providing information about the global position of site.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="defcdb.dc_site_coordinatesource",
                    ),
                ),
                (
                    "geographical_coordinate_reference_system",
                    models.ForeignKey(
                        blank=True,
                        help_text="Name of system uniquely determining the position of the site.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="defcdb.dc_site_geographicalreferencesystem",
                    ),
                ),
                (
                    "province",
                    models.ForeignKey(
                        blank=True,
                        help_text="Geographical area where the site is located.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="defcdb.dc_province",
                        verbose_name="District",
                    ),
                ),
                (
                    "reference",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Bibliographic and web-based references to publications and other relevant information on the site.",
                        to="bib.book",
                    ),
                ),
                (
                    "topography",
                    models.ForeignKey(
                        blank=True,
                        help_text="Description of surface shape and features.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="defcdb.dc_site_topography",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "unique_together": {("name", "province")},
            },
        ),
        migrations.CreateModel(
            name="ResearchEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified", models.DateTimeField(auto_now=True, null=True)),
                (
                    "public",
                    models.BooleanField(
                        default=False, help_text="Make this record public or not?"
                    ),
                ),
                (
                    "year_of_activity_start_year",
                    models.IntegerField(
                        blank=True,
                        help_text="Year when research started.",
                        null=True,
                        verbose_name="Start year of research activity",
                    ),
                ),
                (
                    "year_of_activity_end_year",
                    models.IntegerField(
                        blank=True,
                        help_text="Year when research ended.",
                        null=True,
                        verbose_name="End year of research activity",
                    ),
                ),
                (
                    "project_name",
                    models.CharField(
                        blank=True,
                        help_text="Name of project.",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "project_id",
                    models.CharField(
                        blank=True,
                        help_text="Project unique identifier.",
                        max_length=100,
                        null=True,
                        verbose_name="Project ID",
                    ),
                ),
                (
                    "project_leader",
                    models.CharField(
                        blank=True,
                        help_text="Leader of the research project.",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Additional information on the research history not covered in any other field.",
                        null=True,
                    ),
                ),
                (
                    "institution",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Organisation that carried out a research project at the site.",
                        to="defcdb.dc_researchevent_institution",
                    ),
                ),
                (
                    "reference",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Bibliographic and/or web-based reference(s) to publications and other relevant resources related to the project.",
                        to="bib.book",
                    ),
                ),
                (
                    "research_type",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Methods used for researching the site.",
                        to="defcdb.dc_researchevent_researchtype",
                    ),
                ),
                (
                    "special_analysis",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Analyses other than excavation that were carried out to research the site.",
                        to="defcdb.dc_researchevent_special_analysis",
                    ),
                ),
            ],
            options={
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="Interpretation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified", models.DateTimeField(auto_now=True, null=True)),
                (
                    "public",
                    models.BooleanField(
                        default=False, help_text="Make this record public or not?"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Free text summary account on subsistence & production of the site.",
                        null=True,
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Additional information on subsistence and production not covered in any other field.",
                        null=True,
                    ),
                ),
                (
                    "area",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The interpreted area(s).",
                        to="defcdb.area",
                    ),
                ),
                (
                    "finds",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The interpreted find(s).",
                        to="defcdb.finds",
                    ),
                ),
                (
                    "production_type",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Types of production for which evidence was found.",
                        to="defcdb.dc_interpretation_productiontype",
                    ),
                ),
                (
                    "reference",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Bibliographic and web-based reference(s)to publications and other relevant resources on industry & subsistence of the site/phase of the site.",
                        to="bib.book",
                    ),
                ),
                (
                    "subsistence_type",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Types of livelihood for which evidence was found.",
                        to="defcdb.dc_interpretation_subsistencetype",
                    ),
                ),
            ],
            options={
                "ordering": ("id",),
            },
        ),
        migrations.AddField(
            model_name="finds",
            name="research_event",
            field=models.ForeignKey(
                blank=True,
                help_text="Project / Research the finds are related to.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="defcdb.researchevent",
            ),
        ),
        migrations.AddField(
            model_name="finds",
            name="small_finds_category",
            field=models.ForeignKey(
                blank=True,
                help_text="Superordinate class of small find.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="defcdb.dc_finds_small_finds_category",
            ),
        ),
        migrations.AddField(
            model_name="finds",
            name="small_finds_type",
            field=models.ManyToManyField(
                blank=True,
                help_text="What kind of small find is described.",
                to="defcdb.dc_finds_small_finds_type",
            ),
        ),
        migrations.CreateModel(
            name="DC_region",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the region",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "original_name",
                    models.CharField(
                        blank=True,
                        help_text="The original or local name of the region",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "authorityfile_id",
                    models.CharField(
                        blank=True,
                        help_text="Identifier provided by www.GeoNames.org",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lng", models.FloatField(blank=True, null=True)),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        help_text="The name of the country",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="defcdb.dc_country",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="dc_province",
            name="region",
            field=models.ForeignKey(
                blank=True,
                help_text="The name of the country",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="defcdb.dc_region",
            ),
        ),
        migrations.AddField(
            model_name="dc_finds_pottery_form",
            name="region",
            field=models.ManyToManyField(blank=True, to="defcdb.dc_region"),
        ),
        migrations.AddField(
            model_name="dc_finds_pottery_detail",
            name="region",
            field=models.ManyToManyField(blank=True, to="defcdb.dc_region"),
        ),
        migrations.AddField(
            model_name="dc_finds_pottery_decoration",
            name="region",
            field=models.ManyToManyField(blank=True, to="defcdb.dc_region"),
        ),
        migrations.CreateModel(
            name="DC_chronological_system",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short description."),
                ),
                (
                    "cs_name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the chronological system.",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "period_name",
                    models.CharField(
                        blank=True,
                        help_text="Name of archaeological period for which evidence was found.",
                        max_length=256,
                        null=True,
                    ),
                ),
                ("start_date1_bc", models.IntegerField(blank=True, null=True)),
                ("start_date2_bc", models.IntegerField(blank=True, null=True)),
                ("end_date1_bc", models.IntegerField(blank=True, null=True)),
                ("end_date2_bc", models.IntegerField(blank=True, null=True)),
                ("region", models.ManyToManyField(blank=True, to="defcdb.dc_region")),
            ],
            options={
                "ordering": ("cs_name",),
            },
        ),
        migrations.AddField(
            model_name="area",
            name="area_type",
            field=models.ForeignKey(
                blank=True,
                help_text="The type of the area.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="defcdb.dc_area_areatype",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="cave_rockshelters_evidence_of_occupation",
            field=models.ManyToManyField(
                blank=True,
                help_text="Type of evidence indicating occupation found.",
                to="defcdb.dc_area_evidenceofoccupation",
                verbose_name="Cave/rockshelters: evidence of occupation",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="cave_rockshelters_type",
            field=models.ForeignKey(
                blank=True,
                help_text="Type of cave/rockshelter.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="defcdb.dc_area_caverockshelterstype",
                verbose_name="Cave/rockshelters type",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="cemetery_or_graves_mortuary_features",
            field=models.ManyToManyField(
                blank=True,
                help_text="Parts of the cemetery other than graves.",
                to="defcdb.dc_area_mortuaryfeatures",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="cemetery_or_graves_topography",
            field=models.ManyToManyField(
                blank=True,
                help_text="Connection of the cemetery/graves with other archaeological /natural or modified landscape features.",
                to="defcdb.dc_area_topography",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="dating_method",
            field=models.ManyToManyField(
                blank=True,
                help_text="Method used for dating the site.",
                to="defcdb.dc_period_datingmethod",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="earliest_datedated_by",
            field=models.ManyToManyField(
                blank=True,
                help_text="Dating source material.",
                max_length=100,
                related_name="earliestdatedatedby",
                to="defcdb.dc_period_datedby",
                verbose_name="Earliest date: Dated by",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="grave_age_groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="Age.",
                to="defcdb.dc_area_agegroups",
                verbose_name="Grave: age groups",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="grave_manipulations_of_graves",
            field=models.ManyToManyField(
                blank=True,
                help_text="Post-depositional intervention of grave.",
                to="defcdb.dc_area_manipulationofgraves",
                verbose_name="Grave: disturbance of graves",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="grave_sexes",
            field=models.ManyToManyField(
                blank=True,
                help_text="Sex.",
                to="defcdb.dc_area_sexes",
                verbose_name="Grave: sexes",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="grave_type",
            field=models.ManyToManyField(
                blank=True, help_text="Types of graves.", to="defcdb.dc_area_gravetype"
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="grave_type_of_human_remains",
            field=models.ManyToManyField(
                blank=True,
                help_text="How the humans were treated after death and buried.",
                to="defcdb.dc_area_typeofhumanremains",
                verbose_name="Grave: type of human remains",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="latest_datedated_by",
            field=models.ManyToManyField(
                blank=True,
                help_text="Dating source material.",
                max_length=100,
                related_name="latestdatedatedby",
                to="defcdb.dc_period_datedby",
                verbose_name="Latest date: Dated by",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="period",
            field=models.ManyToManyField(
                blank=True,
                help_text="Chronological period. This contains information about the name, the period, start/enddate1/2, and the region.",
                to="defcdb.dc_chronological_system",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="period_reference",
            field=models.ManyToManyField(
                blank=True,
                help_text="Bibliographic and web-based reference(s) to publications and other relevant resources on the period.",
                related_name="periodreference",
                to="bib.book",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="quarry_exploitation_type",
            field=models.ForeignKey(
                blank=True,
                help_text="Type of extraction.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="defcdb.dc_area_exploitationtype",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="quarry_raw_material",
            field=models.ManyToManyField(
                blank=True,
                help_text="Resource that was extracted.",
                to="defcdb.dc_area_rawmaterial",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="reference",
            field=models.ManyToManyField(
                blank=True,
                help_text="Bibliographic and web-based reference(s) to publications and other relevant resources on the settlement.",
                related_name="referencereference",
                to="bib.book",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="settlement_building_technique",
            field=models.ManyToManyField(
                blank=True,
                help_text="Type of buildings.",
                to="defcdb.dc_area_buildingtechnique",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="settlement_construction_shape",
            field=models.ManyToManyField(
                blank=True,
                help_text="Shape of the building.",
                to="defcdb.dc_area_constructionshape",
                verbose_name="Settlement building shape",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="settlement_construction_type",
            field=models.ManyToManyField(
                blank=True,
                help_text="Method used for fabricating the buildings.",
                to="defcdb.dc_area_constructiontype",
                verbose_name="Settlement building type",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="settlement_special_features",
            field=models.ManyToManyField(
                blank=True,
                help_text="Parts of the settlement other than buildings.",
                to="defcdb.dc_area_specialfeatures",
                verbose_name="Settlement archaeological features",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="settlement_structure",
            field=models.ManyToManyField(
                blank=True,
                help_text="Layout of settlement.",
                to="defcdb.dc_area_settlementstructure",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="settlement_type",
            field=models.ForeignKey(
                blank=True,
                help_text="Classification of settlement.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="defcdb.dc_area_settlementtype",
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="site",
            field=models.ForeignKey(
                blank=True,
                help_text="The site where this area is located.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="defcdb.site",
            ),
        ),
    ]
